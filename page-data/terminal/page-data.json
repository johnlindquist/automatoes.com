{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/terminal","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"terminal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Terminal\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"store-zsh-functions-in-a-directory\",\n    \"title\": \"Store Zsh Functions in a Directory\"\n  }), \"Store Zsh Functions in a Directory\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code\",\n    \"title\": \"Create a New Markdown File with the Date and Open It in VS Code\"\n  }), \"Create a New Markdown File with the Date and Open It in VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"title\": \"Create a Markdown Blog Post with Embeds in a Single Command\"\n  }), \"Create a Markdown Blog Post with Embeds in a Single Command\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"store-zsh-functions-in-a-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Store Zsh Functions in a Directory\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" Directory\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".zshrc\"), \", add the following block to the top:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"for file in ~/.zfunc/**; do\\n  autoload $file;\\ndone\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a files containing zsh functions into your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" directory\")), mdx(\"p\", null, \"For example, create a file named: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\")), mdx(\"p\", null, \"Add the contents:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ls | grep -i \\\"$1\\\"\\n\")), mdx(\"p\", null, \"Now you can search your current directory with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lg foo\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4cd3e8d6-324f-59ad-a9d7-2440d6ad70ed","fields":{"slug":"/store-zsh-functions-in-a-directory","title":"Store Zsh Functions in a Directory"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a New Markdown File with the Date and Open It in VS Code\"), mdx(\"p\", null, \"I use this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"thoughts\"), \" command every day to make a new page for my journal:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"local filename=\\\"/Users/johnlindquist/projects/thoughts/$(date +%Y-%m-%d).md\\\"\\ntouch -a \\\"$filename\\\"\\nopen -a 'Visual Studio Code' ~/projects/thoughts -g \\\"$filename\\\"\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Markdown\",\n    \"title\": \"Markdown\"\n  }), \"[[Markdown]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Journal\",\n    \"title\": \"Journal\"\n  }), \"[[Journal]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d31c3bda-ddc3-5a23-bf5b-66f2d1e7add7","fields":{"slug":"/create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code","title":"Create a New Markdown File with the Date and Open It in VS Code"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Markdown Blog Post with Embeds in a Single Command\"), mdx(\"p\", null, \"Usage: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog \\\"a post with a youtube and egghead embed\\\" -y \\\"awftawftoyun\\\" -e \\\"Bawftyun\\\"\")), mdx(\"p\", null, \"Result: A markdown file properly titled with frontmatter and codesandbox/youtube/egghead embeds\"), mdx(\"p\", null, \"I'll make a video sometime to walk through this entire process, but here's the gist of it:\"), mdx(\"p\", null, \"I use this zsh function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# y:youtube c:codesandbox e:egghead\\nzparseopts -D -E -A opts y: c: e:\\n\\ncd ~/projects/johnlindquist.com\\n\\nlocal title=\\\"$(change -c title \\\"$1\\\")\\\"\\nlocal slug=\\\"$(change \\\"$1\\\")\\\"\\n\\n# Use the array_of_lines technique in case node.js console more than 1 line of text\\n# array_of_lines=(\\\"${(@f)$(my_command)}\\\")\\narray_of_lines=(\\\"${(@f)$(node ~/projects/blog/index.js \\\"$title\\\" \\\\\\n  $(slug)\\n)}\\\")\\n\\nfilePath=$array_of_lines[-1]\\n\\nport=$(detect 8000)\\ncode . -g \\\"$filePath\\\"\\nopen \\\"http://localhost:8000/${slug}\\\"\\n\\n# The port is available when it's the same as the requested port\\nif [ $port = 8000 ]\\n  then\\n  yarn develop\\nfi\\n\")), mdx(\"p\", null, \"Which triggers this node script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"#!/usr/bin/env node\\n\\nconst slugify = require(\\\"slugify\\\")\\nconst fs = require(\\\"fs-extra\\\")\\nconst { format } = require(\\\"date-fns\\\")\\nconst formatTitle = require(\\\"ap-style-title-case\\\")\\nconst cac = require(\\\"cac\\\")\\nconst cli = cac()\\nconst path = require(\\\"path\\\")\\n\\ncli\\n  .command(\\\"[...title]\\\")\\n  .option(\\n    \\\"--codesandbox <codesandbox>\\\",\\n    \\\"Codesandbox slug\\\",\\n    { type: String, default: \\\"\\\" }\\n  )\\n  .option(\\\"--youtube <youtube>\\\", \\\"Youtube slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .option(\\\"--egghead <egghead>\\\", \\\"egghead slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .action(([text], options) => {\\n    const { codesandbox, youtube, egghead } = options\\n\\n    const slug = slugify(text, {\\n      replacement: \\\"-\\\", // replace spaces with replacement\\n      remove: /[*+~.()'\\\"!:@,]/g, // regex to remove characters\\n      lower: true, // result in lower case\\n    })\\n\\n    const title = formatTitle(text)\\n\\n    // console.log({ codesandbox, youtube, egghead })\\n\\n    const codesandboxBlock =\\n      codesandbox && `<Codesandbox slug=\\\"${codesandbox}\\\"/>`\\n    const youtubeBlock =\\n      youtube && `<YoutubeEmbed slug=\\\"${youtube}\\\"/>`\\n    const eggheadBlock =\\n      egghead && `<EggheadEmbed slug=\\\"${egghead}\\\"/>`\\n\\n    const content = `---\\nslug: ${slug}\\ntitle: ${title}\\ndate: ${format(new Date(), \\\"YYYY-MM-DD HH:MM\\\")}\\npublished: false\\ncategory: ['']\\n---\\n\\n${codesandboxBlock || \\\"\\\"}\\n${youtubeBlock || \\\"\\\"}\\n${eggheadBlock || \\\"\\\"}\\n`\\n\\n    // console.log(content)\\n    const localPath = `content/posts/${slug}.md`\\n    const filePath = path.resolve(process.cwd(), localPath)\\n\\n    ;(async () => {\\n      try {\\n        await fs.writeFile(filePath, content, {\\n          flag: \\\"wx\\\",\\n        })\\n        console.log(\\\"Succesfully written \\\" + filePath)\\n        console.log(localPath)\\n      } catch (error) {\\n        console.log(error)\\n        console.log(\\\"file \\\" + filePath + \\\" already exists\\\")\\n      }\\n    })()\\n  })\\n\\ncli.parse()\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\"\n  }), \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"faacc92e-50c5-50ae-bbcb-ac84cc4c396f","fields":{"slug":"/create-a-markdown-blog-post-with-embeds-in-a-single-command","title":"Create a Markdown Blog Post with Embeds in a Single Command"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"discord\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Discord\"), mdx(\"p\", null, \"Come hang out with us on Discord. We chat about the scripts, tools, snippets, etc that we're building.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://discord.gg/swmH3HS\"\n  }), \"Join our Discord\")), mdx(\"h2\", {\n    \"id\": \"newsletter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Newsletter\"), mdx(\"p\", null, \"Sign-up below to receive automation recipes weekly in your mailbox! \\uD83D\\uDC4B\"), mdx(Newsletter, {\n    mdxType: \"Newsletter\"\n  }), mdx(\"h2\", {\n    \"id\": \"topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"code\",\n    \"title\": \"Code\"\n  }), \"Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"internet\",\n    \"title\": \"Internet\"\n  }), \"Internet\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"terminal\",\n    \"title\": \"Terminal\"\n  }), \"Terminal\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"typing\",\n    \"title\": \"Typing\"\n  }), \"Typing\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"video\",\n    \"title\": \"Video\"\n  }), \"Video\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"contributors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Contributors\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"trevor-brindle\",\n    \"title\": \"Trevor Brindle\"\n  }), \"Trevor Brindle\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"swyx\",\n    \"title\": \"Swyx\"\n  }), \"swyx\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"how-to-contribute\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How to Contribute?\"), mdx(\"p\", null, \"This site runs on [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"foam\",\n    \"title\": \"Foam\"\n  }), \"Foam\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"gatsby\",\n    \"title\": \"Gatsby\"\n  }), \"Gatsby\"), \"]. It is build by [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"github-actions\",\n    \"title\": \"Github Actions\"\n  }), \"Github Actions\"), \"] and hosted on [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"github-pages\",\n    \"title\": \"Github Pages\"\n  }), \"Github Pages\"), \"]\"), mdx(\"h3\", {\n    \"id\": \"adding-a-recipe\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Adding a Recipe\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/johnlindquist/automatoes.com/new/master\"\n  }), \"Create a Markdown file\"), \" at the root of the repo\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Please (loosely) follow the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"recipe-template\",\n    \"title\": \"Recipe Template\"\n  }), \"Recipe Template\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open a PR\")), mdx(\"h3\", {\n    \"id\": \"improving-the-site\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Improving the Site\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Clone repo\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"cd \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_layouts\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run develop\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"All the Gatsby files live in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_layout\"), \". The root of the project is reserved for Markdown files.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"56842b8b-a2b7-56d7-b2ad-1a951fc16aba","fields":{"slug":"/index","title":"index"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"change-terminal-directory-to-the-current-finder-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change terminal directory to the current Finder directory\"), mdx(\"p\", null, \"It's easy to open a folder in Finder from the shell, but what about the other way around?\\nThis is a function that works in bash/zsh (I haven't tried in other shells) to change to the current open directory in front Finder window.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cdf() {\\n    target=`osascript -e 'tell application \\\"Finder\\\" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`\\n    if [ \\\"$target\\\" != \\\"\\\" ]; then\\n        cd \\\"$target\\\"; pwd\\n    else\\n        echo 'No Finder window found' >&2\\n    fi\\n}\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Terminal]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Zsh]]\"))), mdx(\"p\", null, \"Contributor: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[TreTuna]]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"850e0522-e8b8-5905-b09a-eafeae1d5955","fields":{"slug":"/change-terminal-directory-to-the-current-finder-directory","title":"Change terminal directory to the current Finder directory"}}}]},"fields":{"slug":"/terminal","title":"Terminal"}}},"pageContext":{"id":"b7f05086-d0fa-597e-b2b4-9ab169dffe1b"}},"staticQueryHashes":["2098632890","426988268"]}