{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/node-js","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Node.js\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://nodejs.org/\",\n    \"parentName\": \"p\"\n  }, \"Node.js\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"kill-a-process-running-on-a-specific-port\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Kill a Process Running on a Specific Port\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://www.npmjs.com/package/fkill\",\n    \"parentName\": \"p\"\n  }, \"Fkill\"), \" allows you to pass in port to kill a process:\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, \"npx fkill :8000\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"936755f8-d54d-5014-b645-1344e5320937","fields":{"slug":"/kill-a-process-running-on-a-specific-port","title":"Kill a Process Running on a Specific Port"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"download-a-repo-without-git-information\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Download a Repo Without Git Information\"), mdx(\"p\", null, \"Use \", mdx(\"a\", {\n    \"href\": \"https://www.npmjs.com/package/degit\",\n    \"parentName\": \"p\"\n  }, \"degit\"), \" to download a repo and it will strip all the git info for you\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, \"npx degit https://github.com/johnlindquist/automatoes.com\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Git\",\n    \"title\": \"Git\",\n    \"parentName\": \"li\"\n  }, \"[[Git]]\"), \"\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\",\n    \"parentName\": \"li\"\n  }, \"Zsh\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"53622ac2-6ff0-5713-a49f-deffee928637","fields":{"slug":"/download-a-repo-without-git-information","title":"Download a Repo Without Git Information"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"share-a-file-from-your-computer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Share a File From Your Computer\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"serve\"), \" to host the directory. Use \", mdx(\"a\", {\n    \"href\": \"https://ngrok.com/\",\n    \"parentName\": \"p\"\n  }, \"ngrok\"), \" to tunnel into your computer. This generates a url like \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"wfuntawufo.ngrok.io\"), \" which you can share with a friend to download directly from your computer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, \"npx serve ./ & npx ngrok http 5000\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    \"parentName\": \"blockquote\"\n  }, \"\\u26A0\\uFE0F Make sure to Ctrl+C to close the processes once you've shared the file\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d6858bba-560d-5906-a3ac-c6bd829fde0e","fields":{"slug":"/share-a-file-from-your-computer","title":"Share a File From Your Computer"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"automatically-title-case-a-sentence-from-alfred\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Automatically Title Case a Sentence from Alfred\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://github.com/johnlindquist/alfred-workflows/raw/master/title.alfredworkflow\",\n    \"parentName\": \"p\"\n  }, \"Download the Alfred workflow\")), mdx(\"p\", null, \"With a combination of \", mdx(\"a\", {\n    \"href\": \"https://www.npmjs.com/package/title-case\",\n    \"parentName\": \"p\"\n  }, \"npm title-case\"), \" and Alfred's \", mdx(\"a\", {\n    \"href\": \"https://www.alfredapp.com/help/workflows/outputs/copy-to-clipboard/\",\n    \"parentName\": \"p\"\n  }, \"Copy to Clipboard\"), \" you can type text into Alfred and it will automatically convert it to Title Case and paste to your cursor\"), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"alfred\",\n    \"title\": \"Alfred\",\n    \"parentName\": \"li\"\n  }, \"Alfred\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"71750f99-99d2-5e5c-9ac1-26b8b56341b7","fields":{"slug":"/automatically-title-case-a-sentence-from-alfred","title":"Automatically Title Case a Sentence from Alfred"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"detect-if-a-port-is-already-in-use\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Detect If a Port Is Already in Use\"), mdx(\"p\", null, \"Use \", mdx(\"a\", {\n    \"href\": \"https://www.npmjs.com/package/detect-port\",\n    \"parentName\": \"p\"\n  }, \"npm detect-port\"), \" to check if a port is in use:\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, \"npx detect-port 8000\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c87cf6cf-d26a-50d0-ac3a-5d2d777b38e8","fields":{"slug":"/detect-if-a-port-is-already-in-use","title":"Detect If a Port Is Already in Use"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Markdown Blog Post with Embeds in a Single Command\"), mdx(\"p\", null, \"Usage: \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"blog \\\"a post with a youtube and egghead embed\\\" -y \\\"awftawftoyun\\\" -e \\\"Bawftyun\\\"\")), mdx(\"p\", null, \"Result: A markdown file properly titled with frontmatter and codesandbox/youtube/egghead embeds\"), mdx(\"p\", null, \"I'll make a video sometime to walk through this entire process, but here's the gist of it:\"), mdx(\"p\", null, \"I use this zsh function called \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"blog\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-bash\",\n    \"parentName\": \"pre\"\n  }, \"# y:youtube c:codesandbox e:egghead\\nzparseopts -D -E -A opts y: c: e:\\n\\ncd ~/projects/johnlindquist.com\\n\\nlocal title=\\\"$(change -c title \\\"$1\\\")\\\"\\nlocal slug=\\\"$(change \\\"$1\\\")\\\"\\n\\n# Use the array_of_lines technique in case node.js console more than 1 line of text\\n# array_of_lines=(\\\"${(@f)$(my_command)}\\\")\\narray_of_lines=(\\\"${(@f)$(node ~/projects/blog/index.js \\\"$title\\\" \\\\\\n  $(slug)\\n)}\\\")\\n\\nfilePath=$array_of_lines[-1]\\n\\nport=$(detect 8000)\\ncode . -g \\\"$filePath\\\"\\nopen \\\"http://localhost:8000/${slug}\\\"\\n\\n# The port is available when it's the same as the requested port\\nif [ $port = 8000 ]\\n  then\\n  yarn develop\\nfi\\n\")), mdx(\"p\", null, \"Which triggers this node script:\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-javascript\",\n    \"parentName\": \"pre\"\n  }, \"#!/usr/bin/env node\\n\\nconst slugify = require(\\\"slugify\\\")\\nconst fs = require(\\\"fs-extra\\\")\\nconst { format } = require(\\\"date-fns\\\")\\nconst formatTitle = require(\\\"ap-style-title-case\\\")\\nconst cac = require(\\\"cac\\\")\\nconst cli = cac()\\nconst path = require(\\\"path\\\")\\n\\ncli\\n  .command(\\\"[...title]\\\")\\n  .option(\\n    \\\"--codesandbox <codesandbox>\\\",\\n    \\\"Codesandbox slug\\\",\\n    { type: String, default: \\\"\\\" }\\n  )\\n  .option(\\\"--youtube <youtube>\\\", \\\"Youtube slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .option(\\\"--egghead <egghead>\\\", \\\"egghead slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .action(([text], options) => {\\n    const { codesandbox, youtube, egghead } = options\\n\\n    const slug = slugify(text, {\\n      replacement: \\\"-\\\", // replace spaces with replacement\\n      remove: /[*+~.()'\\\"!:@,]/g, // regex to remove characters\\n      lower: true, // result in lower case\\n    })\\n\\n    const title = formatTitle(text)\\n\\n    // console.log({ codesandbox, youtube, egghead })\\n\\n    const codesandboxBlock =\\n      codesandbox && `<Codesandbox slug=\\\"${codesandbox}\\\"/>`\\n    const youtubeBlock =\\n      youtube && `<YoutubeEmbed slug=\\\"${youtube}\\\"/>`\\n    const eggheadBlock =\\n      egghead && `<EggheadEmbed slug=\\\"${egghead}\\\"/>`\\n\\n    const content = `---\\nslug: ${slug}\\ntitle: ${title}\\ndate: ${format(new Date(), \\\"YYYY-MM-DD HH:MM\\\")}\\npublished: false\\ncategory: ['']\\n---\\n\\n${codesandboxBlock || \\\"\\\"}\\n${youtubeBlock || \\\"\\\"}\\n${eggheadBlock || \\\"\\\"}\\n`\\n\\n    // console.log(content)\\n    const localPath = `content/posts/${slug}.md`\\n    const filePath = path.resolve(process.cwd(), localPath)\\n\\n    ;(async () => {\\n      try {\\n        await fs.writeFile(filePath, content, {\\n          flag: \\\"wx\\\",\\n        })\\n        console.log(\\\"Succesfully written \\\" + filePath)\\n        console.log(localPath)\\n      } catch (error) {\\n        console.log(error)\\n        console.log(\\\"file \\\" + filePath + \\\" already exists\\\")\\n      }\\n    })()\\n  })\\n\\ncli.parse()\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\",\n    \"parentName\": \"li\"\n  }, \"zsh\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"faacc92e-50c5-50ae-bbcb-ac84cc4c396f","fields":{"slug":"/create-a-markdown-blog-post-with-embeds-in-a-single-command","title":"Create a Markdown Blog Post with Embeds in a Single Command"}}}]},"fields":{"slug":"/node-js","title":"Node.js"}}},"pageContext":{"id":"41af8bce-7140-5ecf-84c3-ba588937d021"}},"staticQueryHashes":["2098632890","426988268"]}