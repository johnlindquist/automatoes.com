{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/zsh","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zsh\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Zsh\"), mdx(\"p\", null, \"The default shell for macOS 10.15+\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"get-a-list-of-all-runnings-apps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Get a List of All Runnings Apps\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"echo $(osascript -e 'tell application \\\"System Events\\\"\\n    set listOfProcesses to (name of every process where background only is false)\\nend tell')\\n\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Osascript\",\n    \"title\": \"Osascript\"\n  }), \"[[Osascript]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"777e7b42-2972-577f-bdde-ffbd43175d14","fields":{"slug":"/get-a-list-of-all-runnings-apps","title":"Get a List of All Runnings Apps"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-repo-and-push-your-code-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Repo and Push Your Code in a Single Command\"), mdx(\"h2\", {\n    \"id\": \"install-hub\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Install Hub\"), mdx(\"p\", null, \"You'll first need to install: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/github/hub\"\n  }), \"github hub\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"brew install hub\\n\")), mdx(\"h2\", {\n    \"id\": \"create-a-share-funct\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"share\"), \" funct\"), mdx(\"p\", null, \"Then put the following an file/function named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"share\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# Creates a .gitignore file based on node:\\ncurl -sLw \\\"\\\\n\\\" https://www.toptal.com/developers/gitignore/api/node\\n\\ngit init\\ngit add .\\ngit commit -m \\\"\\uD83C\\uDF88\\\"\\n\\n# Creates the repo on Github\\nhub create $1\\n\\ngit push -u origin master\\n\\n# Opens your browser to the new repo\\nhub browse\\n\")), mdx(\"p\", null, \"You can now run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"share\"), \" in any directory to push all of the code to Github \\uD83C\\uDF89\"), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Git\",\n    \"title\": \"Git\"\n  }), \"[[Git]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Github\",\n    \"title\": \"Github\"\n  }), \"[[Github]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"82c276ea-eeff-57b8-8aef-0d65f74ea091","fields":{"slug":"/create-a-repo-and-push-your-code-in-a-single-command","title":"Create a Repo and Push Your Code in a Single Command"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"download-a-repo-without-git-information\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Download a Repo Without Git Information\"), mdx(\"p\", null, \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/degit\"\n  }), \"degit\"), \" to download a repo and it will strip all the git info for you\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"npx degit https://github.com/johnlindquist/automatoes.com\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Git\",\n    \"title\": \"Git\"\n  }), \"[[Git]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\"\n  }), \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"53622ac2-6ff0-5713-a49f-deffee928637","fields":{"slug":"/download-a-repo-without-git-information","title":"Download a Repo Without Git Information"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"store-zsh-functions-in-a-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Store Zsh Functions in a Directory\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" Directory\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".zshrc\"), \", add the following block to the top:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"for file in ~/.zfunc/**; do\\n  autoload $file;\\ndone\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a files containing zsh functions into your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" directory\")), mdx(\"p\", null, \"For example, create a file named: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\")), mdx(\"p\", null, \"Add the contents:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ls | grep -i \\\"$1\\\"\\n\")), mdx(\"p\", null, \"Now you can search your current directory with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lg foo\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4cd3e8d6-324f-59ad-a9d7-2440d6ad70ed","fields":{"slug":"/store-zsh-functions-in-a-directory","title":"Store Zsh Functions in a Directory"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a New Markdown File with the Date and Open It in VS Code\"), mdx(\"p\", null, \"I use this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"thoughts\"), \" command every day to make a new page for my journal:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"local filename=\\\"/Users/johnlindquist/projects/thoughts/$(date +%Y-%m-%d).md\\\"\\ntouch -a \\\"$filename\\\"\\nopen -a 'Visual Studio Code' ~/projects/thoughts -g \\\"$filename\\\"\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Markdown\",\n    \"title\": \"Markdown\"\n  }), \"[[Markdown]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Journal\",\n    \"title\": \"Journal\"\n  }), \"[[Journal]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d31c3bda-ddc3-5a23-bf5b-66f2d1e7add7","fields":{"slug":"/create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code","title":"Create a New Markdown File with the Date and Open It in VS Code"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"change-terminal-directory-to-the-current-finder-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change Terminal Directory to the Current Finder Directory\"), mdx(\"p\", null, \"It's easy to open a folder in Finder from the shell, but what about the other way around?\\nThis is a function that works in bash/zsh (I haven't tried in other shells) to change to the current open directory in front Finder window.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cdf() {\\n    target=`osascript -e 'tell application \\\"Finder\\\" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`\\n    if [ \\\"$target\\\" != \\\"\\\" ]; then\\n        cd \\\"$target\\\"; pwd\\n    else\\n        echo 'No Finder window found' >&2\\n    fi\\n}\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Terminal]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Zsh]]\"))), mdx(\"p\", null, \"Contributor: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[TreTuna]]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"850e0522-e8b8-5905-b09a-eafeae1d5955","fields":{"slug":"/change-terminal-directory-to-the-current-finder-directory","title":"Change Terminal Directory to the Current Finder Directory"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"get-the-current-url-from-chrome\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Get the Current URL from Chrome\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ss64.com/osx/osascript.html\"\n  }), \"Osascript\"), \" can access apps on your system.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"osascript -e 'tell application \\\"Google Chrome\\\" to return URL of active tab of front window'\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Chrome\",\n    \"title\": \"Chrome\"\n  }), \"[[Chrome]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"898bbd95-0323-53e6-a56e-abb9d8399d0f","fields":{"slug":"/get-the-current-url-from-chrome","title":"Get the Current URL from Chrome"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"join-a-video-and-audio-file-together\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Join a Video and Audio File Together\"), mdx(\"p\", null, \"Solution: Create a zsh function that captures [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"ffmpeg\",\n    \"title\": \"Ffmpeg\"\n  }), \"ffmpeg\"), \"] arguments\"), mdx(\"p\", null, \"Filename: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replace-audio\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"extension=${1##*.}\\nfilename=${1%*.$extension}\\n\\nnewfilename=\\\"$filename\\\"-processed.\\\"$extension\\\"\\n\\nffmpeg -i $1 -i $2 -c:v copy -map 0:v:0 -map 1:a:0 $newfilename\\n\")), mdx(\"p\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"replace-audio myVideo.mp4 myAudio.wav\\n\")), mdx(\"p\", null, \"Tags: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"ffmpeg\",\n    \"title\": \"Ffmpeg\"\n  }), \"ffmpeg\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2830acbe-50c3-5828-8be0-52baf54182c2","fields":{"slug":"/join-a-video-and-audio-file-together","title":"Join a Video and Audio File Together"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"clone-the-currently-open-github-repo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Clone the Currently Open Github Repo\"), mdx(\"p\", null, \"Leveraging \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Get-the-Currently-Open-URL-from-Chrome\",\n    \"title\": \"Get the Currently Open URL from Chrome\"\n  }), \"[[Get the Currently Open URL from Chrome]]\"), \", we can use it as a variable and clone it. Using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"code\"), \" command for [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"] can also save yourself the steps of finding it on your computer to open it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cd ~/projects\\nlocal url=$(chromeURL)\\n\\nrepo=${url:19}\\nname=${repo:t}\\n\\ngit clone git@github.com:$repo && code $name\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Git\",\n    \"title\": \"Git\"\n  }), \"[[Git]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Chrome\",\n    \"title\": \"Chrome\"\n  }), \"[[Chrome]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"99f3d0a2-af8c-526e-938f-3a1508d4a2b8","fields":{"slug":"/clone-the-currently-open-github-repo","title":"Clone the Currently Open Github Repo"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"launch-localhost-in-incognito-to-a-specific-port\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Launch Localhost in Incognito to a Specific Port\"), mdx(\"p\", null, \"For many web devs, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://support.google.com/chrome/answer/95464?co=GENIE.Platform%3DDesktop&hl=en\"\n  }), \"Chrome Incognito Mode\"), \" is a way to disable plugins from inteferring with our dev environments.\"), mdx(\"p\", null, \"Put the following in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"incog\"), \" file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"open -na \\\"Google Chrome\\\" --args --incognito \\\"http://localhost:$1\\\"\\n\")), mdx(\"p\", null, \"Usage:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"incog 3000\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Chrome\",\n    \"title\": \"Chrome\"\n  }), \"[[Chrome]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"Zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"5a8fbdeb-80d3-57dc-8963-299a8e8f1fa8","fields":{"slug":"/launch-localhost-in-incognito-to-a-specific-port","title":"Launch Localhost in Incognito to a Specific Port"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Markdown Blog Post with Embeds in a Single Command\"), mdx(\"p\", null, \"Usage: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog \\\"a post with a youtube and egghead embed\\\" -y \\\"awftawftoyun\\\" -e \\\"Bawftyun\\\"\")), mdx(\"p\", null, \"Result: A markdown file properly titled with frontmatter and codesandbox/youtube/egghead embeds\"), mdx(\"p\", null, \"I'll make a video sometime to walk through this entire process, but here's the gist of it:\"), mdx(\"p\", null, \"I use this zsh function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# y:youtube c:codesandbox e:egghead\\nzparseopts -D -E -A opts y: c: e:\\n\\ncd ~/projects/johnlindquist.com\\n\\nlocal title=\\\"$(change -c title \\\"$1\\\")\\\"\\nlocal slug=\\\"$(change \\\"$1\\\")\\\"\\n\\n# Use the array_of_lines technique in case node.js console more than 1 line of text\\n# array_of_lines=(\\\"${(@f)$(my_command)}\\\")\\narray_of_lines=(\\\"${(@f)$(node ~/projects/blog/index.js \\\"$title\\\" \\\\\\n  $(slug)\\n)}\\\")\\n\\nfilePath=$array_of_lines[-1]\\n\\nport=$(detect 8000)\\ncode . -g \\\"$filePath\\\"\\nopen \\\"http://localhost:8000/${slug}\\\"\\n\\n# The port is available when it's the same as the requested port\\nif [ $port = 8000 ]\\n  then\\n  yarn develop\\nfi\\n\")), mdx(\"p\", null, \"Which triggers this node script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"#!/usr/bin/env node\\n\\nconst slugify = require(\\\"slugify\\\")\\nconst fs = require(\\\"fs-extra\\\")\\nconst { format } = require(\\\"date-fns\\\")\\nconst formatTitle = require(\\\"ap-style-title-case\\\")\\nconst cac = require(\\\"cac\\\")\\nconst cli = cac()\\nconst path = require(\\\"path\\\")\\n\\ncli\\n  .command(\\\"[...title]\\\")\\n  .option(\\n    \\\"--codesandbox <codesandbox>\\\",\\n    \\\"Codesandbox slug\\\",\\n    { type: String, default: \\\"\\\" }\\n  )\\n  .option(\\\"--youtube <youtube>\\\", \\\"Youtube slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .option(\\\"--egghead <egghead>\\\", \\\"egghead slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .action(([text], options) => {\\n    const { codesandbox, youtube, egghead } = options\\n\\n    const slug = slugify(text, {\\n      replacement: \\\"-\\\", // replace spaces with replacement\\n      remove: /[*+~.()'\\\"!:@,]/g, // regex to remove characters\\n      lower: true, // result in lower case\\n    })\\n\\n    const title = formatTitle(text)\\n\\n    // console.log({ codesandbox, youtube, egghead })\\n\\n    const codesandboxBlock =\\n      codesandbox && `<Codesandbox slug=\\\"${codesandbox}\\\"/>`\\n    const youtubeBlock =\\n      youtube && `<YoutubeEmbed slug=\\\"${youtube}\\\"/>`\\n    const eggheadBlock =\\n      egghead && `<EggheadEmbed slug=\\\"${egghead}\\\"/>`\\n\\n    const content = `---\\nslug: ${slug}\\ntitle: ${title}\\ndate: ${format(new Date(), \\\"YYYY-MM-DD HH:MM\\\")}\\npublished: false\\ncategory: ['']\\n---\\n\\n${codesandboxBlock || \\\"\\\"}\\n${youtubeBlock || \\\"\\\"}\\n${eggheadBlock || \\\"\\\"}\\n`\\n\\n    // console.log(content)\\n    const localPath = `content/posts/${slug}.md`\\n    const filePath = path.resolve(process.cwd(), localPath)\\n\\n    ;(async () => {\\n      try {\\n        await fs.writeFile(filePath, content, {\\n          flag: \\\"wx\\\",\\n        })\\n        console.log(\\\"Succesfully written \\\" + filePath)\\n        console.log(localPath)\\n      } catch (error) {\\n        console.log(error)\\n        console.log(\\\"file \\\" + filePath + \\\" already exists\\\")\\n      }\\n    })()\\n  })\\n\\ncli.parse()\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\"\n  }), \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"faacc92e-50c5-50ae-bbcb-ac84cc4c396f","fields":{"slug":"/create-a-markdown-blog-post-with-embeds-in-a-single-command","title":"Create a Markdown Blog Post with Embeds in a Single Command"}}}]},"fields":{"slug":"/zsh","title":"Zsh"}}},"pageContext":{"id":"93f8adce-7c07-5c25-9df1-64c2f063610e"}},"staticQueryHashes":["2098632890","426988268"]}