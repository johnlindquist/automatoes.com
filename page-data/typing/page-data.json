{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/typing","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"typing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Typing\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"use-any-key-as-a-modifier\",\n    \"title\": \"Use Any Key as a Modifier\",\n    \"parentName\": \"li\"\n  }, \"Use Any Key as a Modifier\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"use-keys-as-mouse-buttons-when-using-a-trackpad\",\n    \"title\": \"Use Keys as Mouse Buttons When Using a Trackpad\",\n    \"parentName\": \"li\"\n  }, \"Use Keys as Mouse Buttons When Using a Trackpad\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"automatically-title-case-a-sentence-from-alfred\",\n    \"title\": \"Automatically Title Case a Sentence from Alfred\",\n    \"parentName\": \"li\"\n  }, \"Automatically Title Case a Sentence from Alfred\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"consistent-keyboard-shortcuts-across-apps\",\n    \"title\": \"Consistent Keyboard Shortcuts Across Apps\",\n    \"parentName\": \"li\"\n  }, \"Consistent Keyboard Shortcuts Across Apps\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"use-any-key-as-a-modifier\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Use Any Key as a Modifier\"), mdx(\"p\", null, \"To use your \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"'\"), \" key as a modifier:\"), mdx(\"p\", null, \"In your \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"karabiner.edn\"), \" file:\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"At the top-level, add a \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"simlayers\"), \" section and name a \\\"mode\\\" based on your \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"quote\"), \" key:\")), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \":simlayers {;\\n             :quote-mode {:key :quote}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"At the \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \":main\"), \" level, add a block based on \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"quote-mode\"))), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \"        {:des \\\"quote mode\\\"\\n         :rules [:quote-mode\\n                ; I use quote mode to trigger zsh functions\\n                 [:f [:zsh \\\"thoughts\\\"]]\\n                 [:c [:zsh \\\"config\\\"]]\\n                 [:z  [:zsh \\\"zfunc\\\"]]\\n                 ;\\n                 ]}\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\",\n    \"parentName\": \"li\"\n  }, \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"gokurakujoudo\",\n    \"title\": \"GokuRakuJoudo\",\n    \"parentName\": \"li\"\n  }, \"GokuRakuJoudo\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"de3ae947-9763-56ad-addd-ae18e3bdecd3","fields":{"slug":"/use-any-key-as-a-modifier","title":"Use Any Key as a Modifier"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"use-keys-as-mouse-buttons-when-using-a-trackpad\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Use Keys as Mouse Buttons When Using a Trackpad\"), mdx(\"p\", null, \"With the \", mdx(\"a\", {\n    \"href\": \"https://karabiner-elements.pqrs.org/docs/manual/misc/multitouch-extension/\",\n    \"parentName\": \"p\"\n  }, \"karabiner multitouch extension\"), \", your fingers are detected on the trackpad and your keyboard keys can be used as button clicks.\"), mdx(\"p\", null, \"For example:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"while 1 finger is on the trackpad\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\\"f\\\" key triggers a \\\"left click\\\"\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\\"d\\\" key triggers a \\\"shift left click\\\"\"))), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"while 2 fingers on the trackpad\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\\"f\\\" key triggers a \\\"right click\\\"\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\\\"v\\\" key \\\"left clicks\\\" then pastes the clipboard content\")))), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \"{:des \\\"multitouch\\\"\\n    :rules [;\\n        :multitouch_extension_finger_count_total\\n            [:f :button1]\\n            [:d {:pkey :button1 :modi :left_shift}]\\n        [:condi [\\\"multitouch_extension_finger_count_total\\\" 2]]\\n            [:f :button2]\\n            [:v [:button1 :!Cv]]\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\",\n    \"parentName\": \"li\"\n  }, \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"gokurakujoudo\",\n    \"title\": \"GokuRakuJoudo\",\n    \"parentName\": \"li\"\n  }, \"GokuRakuJoudo\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4d4e3a82-dfa9-558d-8556-424ac9c0e483","fields":{"slug":"/use-keys-as-mouse-buttons-when-using-a-trackpad","title":"Use Keys as Mouse Buttons When Using a Trackpad"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"automatically-title-case-a-sentence-from-alfred\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Automatically Title Case a Sentence from Alfred\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://github.com/johnlindquist/alfred-workflows/raw/master/title.alfredworkflow\",\n    \"parentName\": \"p\"\n  }, \"Download the Alfred workflow\")), mdx(\"p\", null, \"With a combination of \", mdx(\"a\", {\n    \"href\": \"https://www.npmjs.com/package/title-case\",\n    \"parentName\": \"p\"\n  }, \"npm title-case\"), \" and Alfred's \", mdx(\"a\", {\n    \"href\": \"https://www.alfredapp.com/help/workflows/outputs/copy-to-clipboard/\",\n    \"parentName\": \"p\"\n  }, \"Copy to Clipboard\"), \" you can type text into Alfred and it will automatically convert it to Title Case and paste to your cursor\"), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"alfred\",\n    \"title\": \"Alfred\",\n    \"parentName\": \"li\"\n  }, \"Alfred\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"\", mdx(\"a\", {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\",\n    \"parentName\": \"li\"\n  }, \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"71750f99-99d2-5e5c-9ac1-26b8b56341b7","fields":{"slug":"/automatically-title-case-a-sentence-from-alfred","title":"Automatically Title Case a Sentence from Alfred"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"consistent-keyboard-shortcuts-across-apps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Consistent Keyboard Shortcuts Across Apps\"), mdx(\"p\", null, \"In your \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"karabiner.edn\"), \" file\"), mdx(\"h2\", {\n    \"id\": \"define-a-froms-section\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Define a \", mdx(\"inlineCode\", {\n    \"parentName\": \"h2\"\n  }, \"froms\"), \" section\"), mdx(\"p\", null, \"Name and define the shortcut you want to use across all apps\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \":froms {\\n  :duplicate\\n    {:key :d :modi :left_command}\\n  :add-next-find-to-selection\\n    {:key :g :modi :left_control}\\n  :select-to-top-of-file\\n    {:key :up_arrow :modi [:left_command :left_shift]}\\n}\\n\")), mdx(\"p\", null, \"Define a list of apps to overwrite shortcuts\"), mdx(\"h2\", {\n    \"id\": \"define-an-applications-section\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Define an \", mdx(\"inlineCode\", {\n    \"parentName\": \"h2\"\n  }, \"applications\"), \" section\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \":applications {\\n  :code [\\\"com.microsoft.VSCode\\\"]\\n  :webstorm [\\\"com.jetbrains.Webstorm\\\"]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"map-the-shortcut-based-on-the-app\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Map the Shortcut Based on the App\"), mdx(\"p\", null, \"You only have to override the shortcut in the app you want to change\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-clojure\",\n    \"parentName\": \"pre\"\n  }, \":main [\\n  {:des \\\"VS Code Shortcuts\\\"\\n    :rules [\\n       :code ; this limits the below shortcuts to VS Code\\n         [:duplicate [:!Cc :!Cv]]\\n         [:add-next-find-to-selection :!Cd]\\n    ]\\n  }\\n  {:des \\\"WebStorm Shortcuts\\\"\\n    :rules [\\n       :webstorm\\n         [:select-to-start-of-file :!CShome] ;\\n    ]\\n  }\\n]\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\",\n    \"parentName\": \"li\"\n  }, \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"gokurakujoudo\",\n    \"title\": \"GokuRakuJoudo\",\n    \"parentName\": \"li\"\n  }, \"GokuRakuJoudo\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"p\"\n  }, \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"944efade-4d89-5a74-b5cd-2bf1e932c553","fields":{"slug":"/consistent-keyboard-shortcuts-across-apps","title":"Consistent Keyboard Shortcuts Across Apps"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"discord\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Discord\"), mdx(\"p\", null, \"Come hang out with us on Discord. We chat about the scripts, tools, snippets, etc that we're building.\"), mdx(\"p\", null, mdx(\"a\", {\n    \"href\": \"https://discord.gg/swmH3HS\",\n    \"parentName\": \"p\"\n  }, \"Join our Discord\")), mdx(\"h2\", {\n    \"id\": \"newsletter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Newsletter\"), mdx(\"p\", null, \"Sign-up below to receive automation recipes weekly in your mailbox! \\uD83D\\uDC4B\\n\", mdx(Newsletter, {\n    mdxType: \"Newsletter\"\n  })), mdx(\"h2\", {\n    \"id\": \"topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"code\",\n    \"title\": \"Code\",\n    \"parentName\": \"li\"\n  }, \"Code\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"internet\",\n    \"title\": \"Internet\",\n    \"parentName\": \"li\"\n  }, \"Internet\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"terminal\",\n    \"title\": \"Terminal\",\n    \"parentName\": \"li\"\n  }, \"Terminal\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"typing\",\n    \"title\": \"Typing\",\n    \"parentName\": \"li\"\n  }, \"Typing\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"video\",\n    \"title\": \"Video\",\n    \"parentName\": \"li\"\n  }, \"Video\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"contributors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Contributors\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\",\n    \"parentName\": \"li\"\n  }, \"John Lindquist\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"trevor-brindle\",\n    \"title\": \"Trevor Brindle\",\n    \"parentName\": \"li\"\n  }, \"Trevor Brindle\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"swyx\",\n    \"title\": \"Swyx\",\n    \"parentName\": \"li\"\n  }, \"swyx\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"tretuna\",\n    \"title\": \"TreTuna\",\n    \"parentName\": \"li\"\n  }, \"tretuna\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"how-to-contribute\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How to Contribute?\"), mdx(\"p\", null, \"This site runs on [\", mdx(\"a\", {\n    \"href\": \"foam\",\n    \"title\": \"Foam\",\n    \"parentName\": \"p\"\n  }, \"Foam\"), \"] and [\", mdx(\"a\", {\n    \"href\": \"gatsby\",\n    \"title\": \"Gatsby\",\n    \"parentName\": \"p\"\n  }, \"Gatsby\"), \"]. It is build by [\", mdx(\"a\", {\n    \"href\": \"github-actions\",\n    \"title\": \"Github Actions\",\n    \"parentName\": \"p\"\n  }, \"Github Actions\"), \"] and hosted on [\", mdx(\"a\", {\n    \"href\": \"github-pages\",\n    \"title\": \"Github Pages\",\n    \"parentName\": \"p\"\n  }, \"Github Pages\"), \"]\"), mdx(\"h3\", {\n    \"id\": \"adding-a-recipe\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Adding a Recipe\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, mdx(\"a\", {\n    \"href\": \"https://github.com/johnlindquist/automatoes.com/new/master\",\n    \"parentName\": \"li\"\n  }, \"Create a Markdown file\"), \" at the root of the repo\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"Please (loosely) follow the [\", mdx(\"a\", {\n    \"href\": \"recipe-template\",\n    \"title\": \"Recipe Template\",\n    \"parentName\": \"li\"\n  }, \"Recipe Template\"), \"]\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"Open a PR\")), mdx(\"h3\", {\n    \"id\": \"improving-the-site\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Improving the Site\"), mdx(\"ol\", null, mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"Clone repo\"), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, \"cd \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"_layouts\")), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"npm install\")), mdx(\"li\", {\n    \"parentName\": \"ol\"\n  }, mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"npm run develop\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    \"parentName\": \"blockquote\"\n  }, \"All the Gatsby files live in \", mdx(\"inlineCode\", {\n    \"parentName\": \"p\"\n  }, \"_layout\"), \". The root of the project is reserved for Markdown files.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"56842b8b-a2b7-56d7-b2ad-1a951fc16aba","fields":{"slug":"/index","title":"index"}}}]},"fields":{"slug":"/typing","title":"Typing"}}},"pageContext":{"id":"bb905811-fb2b-5464-84cc-ccf278322f52"}},"staticQueryHashes":["2098632890","426988268"]}