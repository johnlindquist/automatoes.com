{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/tretuna","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tretuna\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"TreTuna\"), mdx(\"p\", null, \"Contributions:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[change-terminal-directory-to-the-current-finder-directory]]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"change-terminal-directory-to-the-current-finder-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change terminal directory to the current Finder directory\"), mdx(\"p\", null, \"It's easy to open a folder in Finder from the shell, but what about the other way around?\\nThis is a function that works in bash/zsh (I haven't tried in other shells) to change to the current open directory in front Finder window.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cdf() {\\n    target=`osascript -e 'tell application \\\"Finder\\\" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`\\n    if [ \\\"$target\\\" != \\\"\\\" ]; then\\n        cd \\\"$target\\\"; pwd\\n    else\\n        echo 'No Finder window found' >&2\\n    fi\\n}\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Terminal]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Zsh]]\"))), mdx(\"p\", null, \"Contributor: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[TreTuna]]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"850e0522-e8b8-5905-b09a-eafeae1d5955","fields":{"slug":"/change-terminal-directory-to-the-current-finder-directory","title":"Change terminal directory to the current Finder directory"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"change-terminal-directory-to-the-current-finder-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Change terminal directory to the current Finder directory\"), mdx(\"p\", null, \"It's easy to open a folder in Finder from the shell, but what about the other way around?\\nThis is a function that works in bash/zsh (I haven't tried in other shells) to change to the current open directory in front Finder window.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cdf() {\\n    target=`osascript -e 'tell application \\\"Finder\\\" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`\\n    if [ \\\"$target\\\" != \\\"\\\" ]; then\\n        cd \\\"$target\\\"; pwd\\n    else\\n        echo 'No Finder window found' >&2\\n    fi\\n}\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Terminal]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[Zsh]]\"))), mdx(\"p\", null, \"Contributor: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[TreTuna]]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"850e0522-e8b8-5905-b09a-eafeae1d5955","fields":{"slug":"/change-terminal-directory-to-the-current-finder-directory","title":"Change terminal directory to the current Finder directory"}}}]},"fields":{"slug":"/tretuna","title":"TreTuna"}}},"pageContext":{"id":"f8442849-3ca1-5610-9dcb-4c71690b3bcb"}},"staticQueryHashes":["2098632890","426988268"]}