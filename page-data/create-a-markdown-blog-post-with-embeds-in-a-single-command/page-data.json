{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/create-a-markdown-blog-post-with-embeds-in-a-single-command","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Markdown Blog Post with Embeds in a Single Command\"), mdx(\"p\", null, \"Usage: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog \\\"a post with a youtube and egghead embed\\\" -y \\\"awftawftoyun\\\" -e \\\"Bawftyun\\\"\")), mdx(\"p\", null, \"Result: A markdown file properly titled with frontmatter and codesandbox/youtube/egghead embeds\"), mdx(\"p\", null, \"I'll make a video sometime to walk through this entire process, but here's the gist of it:\"), mdx(\"p\", null, \"I use this zsh function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# y:youtube c:codesandbox e:egghead\\nzparseopts -D -E -A opts y: c: e:\\n\\ncd ~/projects/johnlindquist.com\\n\\nlocal title=\\\"$(change -c title \\\"$1\\\")\\\"\\nlocal slug=\\\"$(change \\\"$1\\\")\\\"\\n\\n# Use the array_of_lines technique in case node.js console more than 1 line of text\\n# array_of_lines=(\\\"${(@f)$(my_command)}\\\")\\narray_of_lines=(\\\"${(@f)$(node ~/projects/blog/index.js \\\"$title\\\" \\\\\\n  $(slug)\\n)}\\\")\\n\\nfilePath=$array_of_lines[-1]\\n\\nport=$(detect 8000)\\ncode . -g \\\"$filePath\\\"\\nopen \\\"http://localhost:8000/${slug}\\\"\\n\\n# The port is available when it's the same as the requested port\\nif [ $port = 8000 ]\\n  then\\n  yarn develop\\nfi\\n\")), mdx(\"p\", null, \"Which triggers this node script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"#!/usr/bin/env node\\n\\nconst slugify = require(\\\"slugify\\\")\\nconst fs = require(\\\"fs-extra\\\")\\nconst { format } = require(\\\"date-fns\\\")\\nconst formatTitle = require(\\\"ap-style-title-case\\\")\\nconst cac = require(\\\"cac\\\")\\nconst cli = cac()\\nconst path = require(\\\"path\\\")\\n\\ncli\\n  .command(\\\"[...title]\\\")\\n  .option(\\n    \\\"--codesandbox <codesandbox>\\\",\\n    \\\"Codesandbox slug\\\",\\n    { type: String, default: \\\"\\\" }\\n  )\\n  .option(\\\"--youtube <youtube>\\\", \\\"Youtube slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .option(\\\"--egghead <egghead>\\\", \\\"egghead slug\\\", {\\n    type: String,\\n    default: \\\"\\\",\\n  })\\n  .action(([text], options) => {\\n    const { codesandbox, youtube, egghead } = options\\n\\n    const slug = slugify(text, {\\n      replacement: \\\"-\\\", // replace spaces with replacement\\n      remove: /[*+~.()'\\\"!:@,]/g, // regex to remove characters\\n      lower: true, // result in lower case\\n    })\\n\\n    const title = formatTitle(text)\\n\\n    // console.log({ codesandbox, youtube, egghead })\\n\\n    const codesandboxBlock =\\n      codesandbox && `<Codesandbox slug=\\\"${codesandbox}\\\"/>`\\n    const youtubeBlock =\\n      youtube && `<YoutubeEmbed slug=\\\"${youtube}\\\"/>`\\n    const eggheadBlock =\\n      egghead && `<EggheadEmbed slug=\\\"${egghead}\\\"/>`\\n\\n    const content = `---\\nslug: ${slug}\\ntitle: ${title}\\ndate: ${format(new Date(), \\\"YYYY-MM-DD HH:MM\\\")}\\npublished: false\\ncategory: ['']\\n---\\n\\n${codesandboxBlock || \\\"\\\"}\\n${youtubeBlock || \\\"\\\"}\\n${eggheadBlock || \\\"\\\"}\\n`\\n\\n    // console.log(content)\\n    const localPath = `content/posts/${slug}.md`\\n    const filePath = path.resolve(process.cwd(), localPath)\\n\\n    ;(async () => {\\n      try {\\n        await fs.writeFile(filePath, content, {\\n          flag: \\\"wx\\\",\\n        })\\n        console.log(\\\"Succesfully written \\\" + filePath)\\n        console.log(localPath)\\n      } catch (error) {\\n        console.log(error)\\n        console.log(\\\"file \\\" + filePath + \\\" already exists\\\")\\n      }\\n    })()\\n  })\\n\\ncli.parse()\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\"\n  }), \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zsh\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Zsh\"), mdx(\"p\", null, \"The default shell for macOS 10.15+\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"93f8adce-7c07-5c25-9df1-64c2f063610e","fields":{"slug":"/zsh","title":"Zsh"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"nodejs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Node.js\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nodejs.org/\"\n  }), \"Node.js\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"41af8bce-7140-5ecf-84c3-ba588937d021","fields":{"slug":"/node-js","title":"Node.js"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"john-lindquist\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"John Lindquist\"), mdx(\"h2\", {\n    \"id\": \"top-recommendations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Top Recommendations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\"\n  }), \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"alfred\",\n    \"title\": \"Alfred\"\n  }), \"Alfred\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"keyboardio\",\n    \"title\": \"keyboardio\"\n  }), \"Keyboardio\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"siri-shortcuts\",\n    \"title\": \"Siri Shortcuts\"\n  }), \"Siri Shortcuts\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"scriptable\",\n    \"title\": \"Scriptable\"\n  }), \"Scriptable\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4dab3b1d-037a-5df9-b894-0f4c0283ec98","fields":{"slug":"/john-lindquist","title":"John Lindquist"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"terminal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Terminal\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"store-zsh-functions-in-a-directory\",\n    \"title\": \"Store Zsh Functions in a Directory\"\n  }), \"Store Zsh Functions in a Directory\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"create-a-new-markdown-file-with-the-date-and-open-it-in-vs-code\",\n    \"title\": \"Create a New Markdown File with the Date and Open It in VS Code\"\n  }), \"Create a New Markdown File with the Date and Open It in VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"create-a-markdown-blog-post-with-embeds-in-a-single-command\",\n    \"title\": \"Create a Markdown Blog Post with Embeds in a Single Command\"\n  }), \"Create a Markdown Blog Post with Embeds in a Single Command\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"change-terminal-directory-to-the-current-finder-directory\",\n    \"title\": \"Change Terminal Directory to the Current Finder Directory\"\n  }), \"Change Terminal Directory to the Current Finder Directory\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"get-a-list-of-all-runnings-apps\",\n    \"title\": \"Get a List of All Runnings Apps\"\n  }), \"Get a List of All Runnings Apps\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b7f05086-d0fa-597e-b2b4-9ab169dffe1b","fields":{"slug":"/terminal","title":"Terminal"}}}]},"fields":{"slug":"/create-a-markdown-blog-post-with-embeds-in-a-single-command","title":"Create a Markdown Blog Post with Embeds in a Single Command"}}},"pageContext":{"id":"faacc92e-50c5-50ae-bbcb-ac84cc4c396f"}},"staticQueryHashes":["2098632890","426988268"]}